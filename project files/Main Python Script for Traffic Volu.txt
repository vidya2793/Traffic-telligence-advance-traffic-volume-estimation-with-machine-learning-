Main Python Script for Traffic Volume Estimation
python
Copy
Edit
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

def load_data():
    # Example data; replace with loading your dataset (CSV, database, etc.)
    data = {
        'datetime': ['2025-06-26 14:23:45', '2025-06-26 15:45:12', '2025-06-27 08:10:00', '2025-06-27 09:15:30'],
        'traffic_volume': [120, 200, 150, 180]
    }
    df = pd.DataFrame(data)
    return df

def preprocess_data(df):
    # Convert to datetime type
    df['datetime'] = pd.to_datetime(df['datetime'])
    
    # Extract datetime features
    df['year'] = df['datetime'].dt.year
    df['month'] = df['datetime'].dt.month
    df['day'] = df['datetime'].dt.day
    df['hour'] = df['datetime'].dt.hour
    df['minute'] = df['datetime'].dt.minute
    df['second'] = df['datetime'].dt.second
    
    # Features to use
    features = ['year', 'month', 'day', 'hour', 'minute', 'second']
    X = df[features]
    y = df['traffic_volume']
    
    return X, y

def train_and_evaluate(X, y):
    # Split data: 80% train, 20% test
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    
    # Initialize and train model (you can change to RandomForestRegressor or others)
    model = LinearRegression()
    model.fit(X_train, y_train)
    
    # Predict on test set
    y_pred = model.predict(X_test)
    
    # Evaluate model
    r2 = r2_score(y_test, y_pred)
    
    print("Model Evaluation:")
    print(f"R-squared score: {r2:.4f}")
    
    return model

def main():
    print("Loading data...")
    df = load_data()
    
    print("Preprocessing data...")
    X, y = preprocess_data(df)
    
    print("Training and evaluating model...")
    model = train_and_evaluate(X, y)
    
    print("Done!")

if __name__ == "__main__":
    main()